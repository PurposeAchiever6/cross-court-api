json = {
  id: session.id,
  start_time: session.start_time.iso8601,
  time: session.time.iso8601,
  duration_minutes: session.duration_minutes,
  cost_credits: session.cost_credits,
  theme_title: session.theme_title,
  theme_subheading: session.theme_subheading,
  theme_description: session.theme_description,
  is_private: session.is_private,
  coming_soon: session.coming_soon,
  normal_session: session.normal_session?,
  is_open_club: session.is_open_club,
  women_only: session.women_only,
  members_only: session.members_only,
  skill_session: session.skill_session,
  all_skill_levels_allowed: session.all_skill_levels_allowed,
  guests_allowed: session.guests_allowed,
  guests_allowed_per_user: session.guests_allowed_per_user,
  cc_cash_earned: session.cc_cash_earned,
  full:,
  reservations_count: session.reservations_count(date),
  allow_back_to_back_reservations: session.allow_back_to_back_reservations,
  back_to_back_restricted: session.back_to_back_restricted?(date, current_user),
  allowed_products: render(
    partial: 'api/v1/sessions/allowed_products/info',
    locals: { session: }
  ),
  past: session.past?(date),
  spots_left:,
  max_capacity: session.max_capacity,
  on_waitlist:,
  referee: {
    full_name: referee&.full_name,
    first_name: referee&.first_name,
    bio: referee&.bio,
    instagram_username: referee&.instagram_username,
    instagram_profile: referee&.instagram_profile
  },
  sem: {
    full_name: sem&.full_name,
    first_name: sem&.first_name,
    bio: sem&.bio,
    instagram_username: sem&.instagram_username,
    instagram_profile: sem&.instagram_profile
  },
  coach: {
    full_name: coach&.full_name,
    first_name: coach&.first_name,
    bio: coach&.bio,
    instagram_username: coach&.instagram_username,
    instagram_profile: coach&.instagram_profile
  },
  shooting_machines: render(
    partial: 'api/v1/shooting_machines/info',
    collection: session.shooting_machines,
    as: :shooting_machine,
    locals: { date: }
  ),
  location: render(partial: 'api/v1/locations/info', locals: { location: session.location }),
  skill_level: nil
}

json[:referee][:image_url] = polymorphic_url(referee.image) if referee&.image&.attached?
json[:sem][:image_url] = polymorphic_url(sem.image) if sem&.image&.attached?
json[:coach][:image_url] = polymorphic_url(coach.image) if coach&.image&.attached?

if user_session.present?
  json[:reserved] = true
  json[:user_session] = render(
    partial: 'api/v1/user_sessions/short_info',
    locals: { user_session: }
  )
end

if session.skill_level
  json[:skill_level] = render(
    partial: 'api/v1/skill_levels/info',
    locals: { skill_level: session.skill_level }
  )
end

json
